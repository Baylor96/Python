0. 以下哪个变量的命名不正确？为什么？

    (A) MM_520  (B) _MM520_  (C) 520_MM  (D) _520_MM


1. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？
>>>myteacher = '小甲鱼'
>>>yourteacher = myteacher
>>>yourteacher = '黑夜'
>>>print(myteacher)


2. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？
>>> myteacher = '小甲鱼'
>>> yourteacher = myteacher
>>> myteacher = '黑夜'
>>> print(yourteacher)


3. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？
>>>first = 520
>>>second = '520'
>>>first = second
>>>print(first)


4. 除了使用反斜杠（\）进行字符转义，还有什么方法可以打印：Let's go! 这个字符串？


5. 如果非要在原始字符串结尾输入反斜杠，可以如何灵活处理？


6. 在这一讲中，我们说变量的命名需要注意一些地方，但小甲鱼在举例的时候貌似却干了点儿“失误”的事儿，你能看得出小甲鱼例子中哪里有问题吗？

0. 以下哪个变量的命名不正确？为什么？ (A) MM_520 (B) _MM520_ (C) 520_MM (D) _520_MM

(C)选项不正确，因为 Python 中的变量名不能以数字开头。


1. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？

会打印：小甲鱼


2. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？

会打印：小甲鱼


3. 在不上机的情况下，以下代码你能猜到屏幕会打印什么内容吗？

会打印：520，注：这里没有单引号括起来，但是他是一个字符串，因为使用 print() 打印，所以不包含单引号。可以试试直接>>>first，它是一个字符串的。


4. 除了使用饭斜杠（\）进行字符转义，还有什么方法可以打印：Let's go! 这个字符串？

>>>"Let's go!"

聪明的鱼油，你想到了吗？！


5. 如果非要在原始字符串结尾输入反斜杠，可以如何灵活处理？

>>>str = r'C:\Program Files\FishC\Good''\\'

聪明的鱼油，你想到了吗？！